[{"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/index.js":"1","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/App.js":"2","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Welcome.jsx":"3","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Users.jsx":"4","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Login.jsx":"5","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/LoginForm.jsx":"6","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/store/index.js":"7","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/store/auth.js":"8","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Register.jsx":"9","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/RegisterForm.jsx":"10","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/DoctorPage.jsx":"11","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/PredictionsList.jsx":"12","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/Header.jsx":"13","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/PatientsList.jsx":"14","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/DoctorAside.jsx":"15"},{"size":358,"mtime":1638704531420,"results":"16","hashOfConfig":"17"},{"size":674,"mtime":1638642195299,"results":"18","hashOfConfig":"17"},{"size":832,"mtime":1638640120863,"results":"19","hashOfConfig":"17"},{"size":78,"mtime":1636395467696,"results":"20","hashOfConfig":"17"},{"size":2199,"mtime":1638640120862,"results":"21","hashOfConfig":"17"},{"size":1406,"mtime":1638640120861,"results":"22","hashOfConfig":"17"},{"size":236,"mtime":1638704188958,"results":"23","hashOfConfig":"17"},{"size":1303,"mtime":1638640120863,"results":"24","hashOfConfig":"17"},{"size":1938,"mtime":1638640120863,"results":"25","hashOfConfig":"17"},{"size":2491,"mtime":1638640120862,"results":"26","hashOfConfig":"17"},{"size":485,"mtime":1638710544360,"results":"27","hashOfConfig":"17"},{"size":134,"mtime":1638697646629,"results":"28","hashOfConfig":"17"},{"size":414,"mtime":1638704945793,"results":"29","hashOfConfig":"17"},{"size":125,"mtime":1638649075311,"results":"30","hashOfConfig":"17"},{"size":1511,"mtime":1638706832158,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v195s8",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/index.js",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/App.js",[],["64","65"],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Welcome.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Users.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Login.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/LoginForm.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/store/index.js",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/store/auth.js",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Register.jsx",["66","67","68"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport RegisterForm from \"../Components/RegisterForm\";\nimport { Navigate } from \"react-router\";\nimport { useState } from \"react\";\nimport \"./Auth.css\";\n\nconst Register = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const userType = useSelector((state) => state.auth.userType);\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const registerHandler = async (details) => {\n    //Check with Backend whether the given email already exists in the Database\n    //If already exists -> show error that email already exists\n    //Otherwise check the JWT for the type and send the request to the backend (must be logged in for this, otherwise -> login page)\n    //Test\n    const data = { email: details.userEmail, password: details.userPassword, firstName: details.userFirstName, lastName: details.userLastName, userType: userType === \"admin\" ? \"medic\" : \"patient\" }\n    try {\n      const response = await fetch('https://localhost:5001/api/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n      if (response.status === 200) {\n        const res = await response.json()\n        setError(\"\")\n        setSuccessMessage(\"New user added!\")\n      }\n      else if (response.status === 409) {\n        setSuccessMessage(\"\")\n        setError(\"This email is already in use!\")\n      }\n      else {\n        throw new Error(\"Something went wrong!\")\n      }\n    }\n    catch (error) {\n      console.log(error)\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"wrapper\">\n        <RegisterForm registerHandler={registerHandler} error={error} success={successMessage} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Register;\n","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/RegisterForm.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/DoctorPage.jsx",["69","70"],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/PredictionsList.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/Header.jsx",["71"],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/PatientsList.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/DoctorAside.jsx",["72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":18},{"ruleId":"78","severity":1,"message":"82","line":9,"column":9,"nodeType":"80","messageId":"81","endLine":9,"endColumn":24},{"ruleId":"78","severity":1,"message":"83","line":30,"column":15,"nodeType":"80","messageId":"81","endLine":30,"endColumn":18},{"ruleId":"78","severity":1,"message":"84","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":23},{"ruleId":"78","severity":1,"message":"85","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":20},{"ruleId":"78","severity":1,"message":"79","line":3,"column":10,"nodeType":"80","messageId":"81","endLine":3,"endColumn":18},{"ruleId":"78","severity":1,"message":"86","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"79","line":3,"column":10,"nodeType":"80","messageId":"81","endLine":3,"endColumn":18},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'isAuthenticated' is assigned a value but never used.","'res' is assigned a value but never used.","'PredictionsList' is defined but never used.","'PatientsList' is defined but never used.","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation"]