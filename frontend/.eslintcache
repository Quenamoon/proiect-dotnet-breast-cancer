[{"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/index.js":"1","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/App.js":"2","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Welcome.jsx":"3","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Users.jsx":"4","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Login.jsx":"5","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/LoginForm.jsx":"6","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/store/index.js":"7","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/store/auth.js":"8","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Register.jsx":"9","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/RegisterForm.jsx":"10","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/DoctorPage.jsx":"11","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/PredictionsList.jsx":"12","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/Header.jsx":"13","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/PatientsList.jsx":"14","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/DoctorAside.jsx":"15","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/MainContent.jsx":"16","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Prediction.jsx":"17","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/PredictionForm.jsx":"18"},{"size":358,"mtime":1638704531420,"results":"19","hashOfConfig":"20"},{"size":781,"mtime":1638865489180,"results":"21","hashOfConfig":"20"},{"size":832,"mtime":1638640120863,"results":"22","hashOfConfig":"20"},{"size":78,"mtime":1636395467696,"results":"23","hashOfConfig":"20"},{"size":2199,"mtime":1638640120862,"results":"24","hashOfConfig":"20"},{"size":1406,"mtime":1638640120861,"results":"25","hashOfConfig":"20"},{"size":236,"mtime":1638704188958,"results":"26","hashOfConfig":"20"},{"size":1303,"mtime":1638640120863,"results":"27","hashOfConfig":"20"},{"size":1938,"mtime":1638640120863,"results":"28","hashOfConfig":"20"},{"size":2491,"mtime":1638640120862,"results":"29","hashOfConfig":"20"},{"size":513,"mtime":1638716934717,"results":"30","hashOfConfig":"20"},{"size":134,"mtime":1638697646629,"results":"31","hashOfConfig":"20"},{"size":414,"mtime":1638704945793,"results":"32","hashOfConfig":"20"},{"size":125,"mtime":1638649075311,"results":"33","hashOfConfig":"20"},{"size":1592,"mtime":1638718590989,"results":"34","hashOfConfig":"20"},{"size":7280,"mtime":1638864636213,"results":"35","hashOfConfig":"20"},{"size":1502,"mtime":1638866492261,"results":"36","hashOfConfig":"20"},{"size":5217,"mtime":1638866245819,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"v195s8",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/index.js",[],["80","81"],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/App.js",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Welcome.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Users.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Login.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/LoginForm.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/store/index.js",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/store/auth.js",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Register.jsx",["82","83","84"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport RegisterForm from \"../Components/RegisterForm\";\nimport { Navigate } from \"react-router\";\nimport { useState } from \"react\";\nimport \"./Auth.css\";\n\nconst Register = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const userType = useSelector((state) => state.auth.userType);\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const registerHandler = async (details) => {\n    //Check with Backend whether the given email already exists in the Database\n    //If already exists -> show error that email already exists\n    //Otherwise check the JWT for the type and send the request to the backend (must be logged in for this, otherwise -> login page)\n    //Test\n    const data = { email: details.userEmail, password: details.userPassword, firstName: details.userFirstName, lastName: details.userLastName, userType: userType === \"admin\" ? \"medic\" : \"patient\" }\n    try {\n      const response = await fetch('https://localhost:5001/api/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n      if (response.status === 200) {\n        const res = await response.json()\n        setError(\"\")\n        setSuccessMessage(\"New user added!\")\n      }\n      else if (response.status === 409) {\n        setSuccessMessage(\"\")\n        setError(\"This email is already in use!\")\n      }\n      else {\n        throw new Error(\"Something went wrong!\")\n      }\n    }\n    catch (error) {\n      console.log(error)\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"wrapper\">\n        <RegisterForm registerHandler={registerHandler} error={error} success={successMessage} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Register;\n","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/RegisterForm.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/DoctorPage.jsx",["85","86"],"import DoctorAside from \"../Components/DoctorAside\";\nimport Header from \"../Components/Header\";\nimport PredictionsList from \"../Components/PredictionsList\";\nimport PatientsList from \"../Components/PatientsList\";\nimport \"./DoctorPage.css\";\nimport { Fragment } from \"react\";\nimport MainContent from \"../Components/MainContent\";\n\nconst DoctorPage = () => {\n  return (\n    <Fragment>\n      <Header />\n      <DoctorAside />\n      <MainContent className=\"content\" />\n    </Fragment>\n  );\n};\n\nexport default DoctorPage;\n","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/PredictionsList.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/Header.jsx",["87"],"import React from \"react\";\nimport \"./Header.css\";\nimport { Navigate } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <header>\n      <div className=\"left_area\">\n        <h3>\n          Breast Cancer <span>Prediction</span>\n        </h3>\n      </div>\n      <div className=\"right_area\">\n        <button className=\"logout_btn\">Logout</button>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/PatientsList.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/DoctorAside.jsx",["88","89"],"import React, { Fragment } from \"react\";\nimport \"./DoctorAside.css\";\nimport { Navigate } from \"react-router-dom\";\n\n// const DoctorAside = () => {\n//   return (\n//     <div className=\"aside\">\n//       <div className=\"aside--profile-pic--img-holder\">\n//         <img\n//           src=\"https://www.pngitem.com/pimgs/m/150-1503945_transparent-user-png-default-user-image-png-png.png\"\n//           alt=\"Profile Pic\"\n//           className=\"aside--profile-pic--img\"\n//         />\n//       </div>\n//       <input\n//         type=\"file\"\n//         name=\"Change Profile Picture\"\n//         className=\"aside--profile-pic--img-choser\"\n//         accept=\"image/* \"\n//       />\n\n//       <ul className=\"aside-links\">\n//         <li className=\"aside-links--link-item\">\n//           <a href=\"#\">Detalii Profil</a>\n//         </li>\n//         <li className=\"aside-links--link-item\">\n//           <a href=\"#\">Pagina Principala</a>\n//         </li>\n//       </ul>\n//     </div>\n//   );\n// };\n\nconst DoctorAside = () => {\n  return (\n    <div className=\"aside\">\n      <center>\n        <img\n          className=\"profile_image\"\n          src=\"https://media.istockphoto.com/vectors/breast-cancer-awareness-with-realistic-pink-ribbon-on-a-white-women-vector-id1176663746?k=20&m=1176663746&s=612x612&w=0&h=6pZAa7Gl51p3TySMX0YgFkOIVgf2PX7LN9MExpYeMMc=\"\n          alt=\"profileimage\"\n        />\n        <h4>Stronger Together</h4>\n      </center>\n      <button className=\"link_button\">Detalii Profil</button>\n      <button className=\"link_button\">Pagina Principala</button>\n    </div>\n  );\n};\nexport default DoctorAside;\n","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/MainContent.jsx",["90","91","92","93","94","95","96"],"import \"./MainContent.css\";\nimport \"./MainContentTable.css\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst MainContent = () => {\n  let [patientsList, setPatientsList] = useState([]);\n  let [patientsCounter, setPatientsCounter] = useState(0);\n  let currentDoctorToken = useSelector((state) => state.auth.JWToken);\n\n  const fetchPatients = useCallback(async () => {\n    try {\n      const response = await fetch(\n        \"https://localhost:5001/api/users/patients\",\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + currentDoctorToken,\n          },\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Patients Get Request Went Wrong\");\n      }\n      const data = await response.json();\n      // [{email: \"test\", id: \"5\"}, {email: \"test2\", id: \"2\"}]\n      setPatientsList((prevState) => [...prevState, ...data]);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchPatients();\n  }, [fetchPatients]);\n  //##################################################33\n\n  // useEffect(() => {\n  //   let mounted = true;\n  //   fetch(\n  //     \"https://localhost:5001/api/users/patients\",\n  //     {\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         \"Accept\": \"application/json\",\n  //         \"Authorization\": \"Bearer \" + currentDoctorToken,\n  //       },\n  //     }\n  //   ).then(data => data.json())\n  //   .then(items => {\n  //       if(mounted) {\n  //         setPatientsList(items)\n  //       }\n  //     })\n  //   return () => mounted = false;\n  // }, [])\n\n  return (\n    <div className=\"content\">\n      <div className=\"content-container\">\n        <div className=\"flex-child prediction\">\n          <button className=\"prediction-button\" role=\"GenerateButton\">\n            Generate prediction\n          </button>\n          <div className=\"table-container\">\n            <table className=\"table-structure\">\n              <thead>\n                <tr>\n                  <th>Prediction Date</th>\n                  <th>Result</th>\n                  <th>See more</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>02-02-2021</td>\n                  <td>Negativ</td>\n                  <td>\n                    <button id=\"btn2\" type=\"button\" className=\"expand-button\">\n                      Expand details\n                    </button>\n                  </td>\n                </tr>\n                <tr>\n                  <td>02-02-2021</td>\n                  <td>Negativ</td>\n                  <td>\n                    <button id=\"btn2\" type=\"button\" className=\"expand-button\">\n                      Expand details\n                    </button>\n                  </td>\n                </tr>\n                <tr>\n                  <td>01-02-2021</td>\n                  <td>Negativ</td>\n                  <td>\n                    <button id=\"btn2\" type=\"button\" className=\"expand-button\">\n                      Expand details\n                    </button>\n                  </td>\n                </tr>\n                <tr>\n                  <td>05-02-2021</td>\n                  <td>Pozitiv</td>\n                  <td>\n                    <button id=\"btn2\" type=\"button\" className=\"expand-button\">\n                      Expand details\n                    </button>\n                  </td>\n                </tr>\n                <tr>\n                  <td>03-02-2021</td>\n                  <td>Negativ</td>\n                  <td>\n                    <button id=\"btn2\" type=\"button\" className=\"expand-button\">\n                      Expand details\n                    </button>\n                  </td>\n                </tr>\n                <tr>\n                  <td>02-02-2021</td>\n                  <td>Pozitiv</td>\n                  <td>\n                    <button id=\"btn2\" type=\"button\" className=\"expand-button\">\n                      Expand details\n                    </button>\n                  </td>\n                </tr>\n                <tr>\n                  <td>02-02-2021</td>\n                  <td>Negativ</td>\n                  <td>\n                    <button id=\"btn2\" type=\"button\" className=\"expand-button\">\n                      Expand details\n                    </button>\n                  </td>\n                </tr>\n                <tr>\n                  <td>02-02-2021</td>\n                  <td>Negativ</td>\n                  <td>\n                    <button id=\"btn2\" type=\"button\" className=\"expand-button\">\n                      Expand details\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div className=\"flex-child patient-list\">\n          <div className=\"button-container\">\n            <button className=\"pacient-button\" role=\"AddButton\">\n              Add a pacient\n            </button>\n            <button className=\"pacient-button\" role=\"DeleteButton\">\n              Delete a pacient\n            </button>\n          </div>\n          <div className=\"table-container\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Pacient ID</th>\n                  <th>First Name</th>\n                  <th>Last Name</th>\n                  {/* <th>See prediction details</th> */}\n                </tr>\n              </thead>\n              <tbody>\n                {/* {patientsList.map((patient) => {\n                  console.log(patientsList);\n                  console.log(patientsCounter);\n                  console.log(patientsList.length);\n                  setPatientsCounter((prev) => {\n                    return prev + 1;\n                  });\n                  console.log(patient);\n                  return (\n                    <tr key={patient.id}>\n                      <td>{patientsCounter}</td>\n                      <td>{patient.email}</td>\n                      <td>\n                        <button className=\"pacient-button\">\n                          Show prediction\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })} */}\n\n                <tr>\n                  <td>1</td>\n                  <td>Maria</td>\n                  <td>Anders</td>\n                </tr>\n                <tr>\n                  <td>2</td>\n                  <td>Francisca</td>\n                  <td>Chang</td>\n                </tr>\n                <tr>\n                  <td>3</td>\n                  <td>Rolanda</td>\n                  <td>Mendel</td>\n                </tr>\n                <tr>\n                  <td>4</td>\n                  <td>Helena</td>\n                  <td>Bennett</td>\n                </tr>\n                <tr>\n                  <td>5</td>\n                  <td>Yoshia</td>\n                  <td>Tannamuri</td>\n                </tr>\n                <tr>\n                  <td>6</td>\n                  <td>Giovanna</td>\n                  <td>Rovelli</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainContent;\n","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Prediction.jsx",["97","98","99","100","101"],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/PredictionForm.jsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":18},{"ruleId":"106","severity":1,"message":"110","line":9,"column":9,"nodeType":"108","messageId":"109","endLine":9,"endColumn":24},{"ruleId":"106","severity":1,"message":"111","line":30,"column":15,"nodeType":"108","messageId":"109","endLine":30,"endColumn":18},{"ruleId":"106","severity":1,"message":"112","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":23},{"ruleId":"106","severity":1,"message":"113","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":18},{"ruleId":"106","severity":1,"message":"114","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"107","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":18},{"ruleId":"106","severity":1,"message":"115","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":20},{"ruleId":"106","severity":1,"message":"116","line":8,"column":8,"nodeType":"108","messageId":"109","endLine":8,"endColumn":23},{"ruleId":"106","severity":1,"message":"117","line":8,"column":25,"nodeType":"108","messageId":"109","endLine":8,"endColumn":43},{"ruleId":"118","severity":1,"message":"119","line":32,"column":6,"nodeType":"120","endLine":32,"endColumn":8,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":63,"column":49,"nodeType":"124","endLine":63,"endColumn":70},{"ruleId":"122","severity":1,"message":"123","line":155,"column":48,"nodeType":"124","endLine":155,"endColumn":64},{"ruleId":"122","severity":1,"message":"123","line":158,"column":48,"nodeType":"124","endLine":158,"endColumn":67},{"ruleId":"106","severity":1,"message":"107","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":18},{"ruleId":"106","severity":1,"message":"110","line":9,"column":9,"nodeType":"108","messageId":"109","endLine":9,"endColumn":24},{"ruleId":"106","severity":1,"message":"125","line":11,"column":17,"nodeType":"108","messageId":"109","endLine":11,"endColumn":25},{"ruleId":"106","severity":1,"message":"126","line":12,"column":26,"nodeType":"108","messageId":"109","endLine":12,"endColumn":43},{"ruleId":"106","severity":1,"message":"111","line":32,"column":15,"nodeType":"108","messageId":"109","endLine":32,"endColumn":18},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'isAuthenticated' is assigned a value but never used.","'res' is assigned a value but never used.","'PredictionsList' is defined but never used.","'PatientsList' is defined but never used.","'Fragment' is defined but never used.","'patientsList' is assigned a value but never used.","'patientsCounter' is assigned a value but never used.","'setPatientsCounter' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'currentDoctorToken'. Either include it or remove the dependency array.","ArrayExpression",["129"],"jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","'setError' is assigned a value but never used.","'setSuccessMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [currentDoctorToken]",{"range":"132","text":"133"},[1056,1058],"[currentDoctorToken]"]