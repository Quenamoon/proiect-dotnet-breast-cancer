[{"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/index.js":"1","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/App.js":"2","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Welcome.jsx":"3","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Users.jsx":"4","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Login.jsx":"5","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/LoginForm.jsx":"6","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/store/index.js":"7","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/store/auth.js":"8","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Register.jsx":"9","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/RegisterForm.jsx":"10"},{"size":358,"mtime":1638018148095,"results":"11","hashOfConfig":"12"},{"size":567,"mtime":1638038588181,"results":"13","hashOfConfig":"12"},{"size":794,"mtime":1638020004951,"results":"14","hashOfConfig":"12"},{"size":78,"mtime":1636395467696,"results":"15","hashOfConfig":"12"},{"size":1294,"mtime":1638086094736,"results":"16","hashOfConfig":"12"},{"size":1394,"mtime":1638085185145,"results":"17","hashOfConfig":"12"},{"size":188,"mtime":1638017761213,"results":"18","hashOfConfig":"12"},{"size":706,"mtime":1638086098074,"results":"19","hashOfConfig":"12"},{"size":924,"mtime":1638085147146,"results":"20","hashOfConfig":"12"},{"size":2867,"mtime":1638085190301,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"v195s8",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/index.js",[],["44","45"],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/App.js",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Welcome.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Users.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Login.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/LoginForm.jsx",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/store/index.js",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/store/auth.js",[],"/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Pages/Register.jsx",["46","47","48"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport RegisterForm from \"../Components/RegisterForm\";\nimport { Navigate } from \"react-router\";\nimport { useState } from \"react\";\nimport \"./Auth.css\";\n\nconst Register = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const [error, setError] = useState(\"\");\n\n  const registerHandler = (details) => {\n    //Check with Backend whether the given email already exists in the Database\n    //If already exists -> show error that email already exists\n    //Otherwise check the JWT for the type and send the request to the backend (must be logged in for this, otherwise -> login page)\n    console.log(details);\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"wrapper\">\n        <RegisterForm registerHandler={registerHandler} error={error} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Register;\n","/Users/tiberiu07/Documents/Rider/dotNETProject/proiect-dotnet-breast-cancer/frontend/src/Components/RegisterForm.jsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":4,"column":10,"nodeType":"55","messageId":"56","endLine":4,"endColumn":18},{"ruleId":"53","severity":1,"message":"57","line":9,"column":9,"nodeType":"55","messageId":"56","endLine":9,"endColumn":24},{"ruleId":"53","severity":1,"message":"58","line":10,"column":17,"nodeType":"55","messageId":"56","endLine":10,"endColumn":25},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'isAuthenticated' is assigned a value but never used.","'setError' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]